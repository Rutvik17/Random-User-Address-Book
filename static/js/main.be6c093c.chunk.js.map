{"version":3,"sources":["redux/SystemReducer.tsx","components/Spinner.tsx","redux/Store.tsx","components/Persons.tsx","components/Person.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["SYSTEM_ACTION_TYPE","Spinner","className","setLoadMoreUsers","load","type","SET_LOAD_MORE_USERS","payload","initSystemState","loading","loadMoreUsers","randomUsers","useSelector","createSelectorHook","rootReducer","combineReducers","system","state","action","SET_LOADING","SET_RANDOM_USERS","tempRandomUsers","result","store","createStore","composeWithDevTools","Persons","dispatch","useDispatch","onScroll","React","useCallback","event","target","scrollHeight","scrollTop","clientHeight","length","map","randomUser","index","to","login","uuid","src","picture","medium","alt","name","first","dob","age","Person","params","useParams","useState","randomPerson","setRandomPerson","setLoading","useEffect","person","find","user","id","large","icon","gender","faMale","faFemale","last","faCity","location","city","faPhone","phone","faMailBulk","email","App","fetchRandomUsers","fetch","then","response","ok","json","data","results","catch","error","console","finally","setTimeout","fallback","exact","path","component","render","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be6c093c.chunk.js","sourcesContent":["import RandomPerson from \"../models/Person\";\n\nexport enum SYSTEM_ACTION_TYPE {\n    SET_LOADING = 'SET_LOADING',\n    SET_RANDOM_USERS = 'SET_RANDOM_USERS',\n    SET_LOAD_MORE_USERS = 'SET_LOAD_MORE_USERS'\n}\n\nexport interface SystemAction { type: SYSTEM_ACTION_TYPE; payload: Array<RandomPerson>|boolean; }\n\nexport const setRandomUsers = (randomUsers: Array<RandomPerson>) => {\n    return {\n        type: SYSTEM_ACTION_TYPE.SET_RANDOM_USERS,\n        payload: randomUsers\n    };\n};\n\nexport const setLoading = (loading: boolean) => {\n    return {\n        type: SYSTEM_ACTION_TYPE.SET_LOADING,\n        payload: loading\n    }\n}\n\nexport const setLoadMoreUsers = (load: boolean) => {\n    return {\n        type: SYSTEM_ACTION_TYPE.SET_LOAD_MORE_USERS,\n        payload: load\n    }\n}\n\n//state\nexport interface SystemState {\n    loading: boolean;\n    loadMoreUsers: boolean,\n    randomUsers: Array<RandomPerson>;\n}\n\nconst initSystemState:SystemState = {\n    loading: true,\n    loadMoreUsers: false,\n    randomUsers: [],\n};\n\n//reducer\nexport const systemReducer = (state = initSystemState, action: SystemAction) => {\n    switch (action.type) {\n        case SYSTEM_ACTION_TYPE.SET_LOADING: {\n            return {...state, loading: action.payload as boolean}\n        }\n        case SYSTEM_ACTION_TYPE.SET_LOAD_MORE_USERS: {\n            return {...state, loadMoreUsers: action.payload as boolean}\n        }\n        case SYSTEM_ACTION_TYPE.SET_RANDOM_USERS: {\n            const tempRandomUsers = action.payload as Array<RandomPerson>;\n            const result = [...state.randomUsers, ...tempRandomUsers];\n            return {...state, randomUsers: result as Array<RandomPerson>};\n        }\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport '../scss/Spinner.scss';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-ring\">\n            <div />\n            <div />\n            <div />\n            <div />\n        </div>\n    );\n};\n\nexport default Spinner;\n","import { combineReducers, createStore } from 'redux';\nimport { createSelectorHook } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { systemReducer } from \"./SystemReducer\";\n\nexport type IRootState = ReturnType<typeof rootReducer>\nexport const useSelector = createSelectorHook<IRootState>();\n\nconst rootReducer = combineReducers({\n    system: systemReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools()\n);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from \"./Spinner\";\nimport {useSelector} from \"../redux/Store\";\nimport '../scss/Persons.scss';\nimport {useDispatch} from \"react-redux\";\nimport {setLoadMoreUsers} from \"../redux/SystemReducer\";\n\nconst Persons = () => {\n    const dispatch =                        useDispatch();\n    const loading =                         useSelector((state) => state.system.loading);\n    const loadMoreUsers =                   useSelector((state) => state.system.loadMoreUsers);\n    const randomUsers =                     useSelector((state) => state.system.randomUsers);\n    const onScroll = React.useCallback((event) => {\n        const target = event.target;\n        if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n            dispatch(setLoadMoreUsers(true));\n        }\n    }, [dispatch]);\n    return (\n        <div className=\"flex flex-col\">\n            {!loading &&\n                <article className=\"randomPerson\">\n                    <header>\n                        <h1 className=\"randomPerson__title\"><span className=\"randomPerson__title--top\">Nuvalence</span><span\n                            className=\"randomPerson__title--bottom\">Address Book</span></h1>\n                    </header>\n                    <main className=\"randomPerson__profiles\" onScroll={(event) => onScroll(event)}>\n                        {randomUsers.length && randomUsers.map((randomUser, index) => (\n                            <div key={index}>\n                                <Link to={`/${randomUser.login.uuid}`}>\n                                    <article className=\"randomPerson__profile\">\n                                        <img src={randomUser.picture.medium} alt={randomUser.name.first}\n                                             className=\"randomPerson__picture\" />\n                                        <span className=\"randomPerson__name\">{randomUser.name.first}</span>\n                                        <span className=\"randomPerson__value\"><span>Age: </span>{randomUser.dob.age}</span>\n                                    </article>\n                                </Link>\n                                {index === randomUsers.length - 1 && loadMoreUsers &&\n                                    <div className=\"text-center\">\n                                        <Spinner />\n                                    </div>\n                                }\n                            </div>\n                        ))}\n                    </main>\n                </article>\n            }\n            <div className=\"text-center\">\n                {loading && <Spinner />}\n            </div>\n        </div>\n    );\n};\n\nexport default Persons;\n","import React from 'react';\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {useSelector} from \"../redux/Store\";\nimport RandomPerson from \"../models/Person\";\nimport {PARAMS} from \"../models/Params\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCity, faPhone, faMailBulk, faMale, faFemale } from '@fortawesome/free-solid-svg-icons';\nimport '../scss/Person.scss';\n\nconst Person = () => {\n    const params =                                  useParams<PARAMS>();\n    const randomUsers =                             useSelector((state) => state.system.randomUsers);\n    const [randomPerson, setRandomPerson] =         React.useState<RandomPerson>();\n    const [loading, setLoading] =                   React.useState(true);\n    React.useEffect(() => {\n        const person = randomUsers.find((user) => {\n            return user.login.uuid === params.id\n        });\n        setRandomPerson(person);\n        setLoading(false);\n    }, [params, randomUsers]);\n    return (\n        <>\n            {randomPerson &&\n                <div className=\"card-container\">\n                    <img\n                        className=\"image\"\n                        src={randomPerson.picture.large}\n                        alt={randomPerson.name.first}\n                    />\n                    <div className=\"text-sm leading-normal mt-2 mb-2 text-blueGray-400 font-bold uppercase\">\n                        <span className=\"pr-2 inline-block\">\n                            <FontAwesomeIcon icon={randomPerson.gender === 'male' ? faMale : faFemale} />\n                        </span>\n                        <h1 className=\"inline-block\">{`${randomPerson.name.first} ${randomPerson.name.last}`}</h1>\n                    </div>\n                    <div className=\"text-sm leading-normal mt-0 mb-2 text-blueGray-400 font-bold uppercase\">\n                        <span className=\"pr-2 inline-block\">\n                            Age:\n                        </span>\n                        <h1 className=\"inline-block\">{randomPerson.dob.age}</h1>\n                    </div>\n                    <div className=\"text-sm leading-normal mt-0 mb-2 text-blueGray-400 font-bold uppercase\">\n                        <span className=\"pr-2\">\n                            <FontAwesomeIcon icon={faCity} />\n                        </span>\n                        {randomPerson.location.city}\n                    </div>\n                    <div className=\"mb-2 text-blueGray-600\">\n                        <span className=\"pr-2\">\n                            <FontAwesomeIcon icon={faPhone} />\n                        </span>\n                        {randomPerson.phone}\n                    </div>\n                    <div className=\"mb-2 text-blueGray-600\">\n                        <span className=\"pr-2\">\n                            <FontAwesomeIcon icon={faMailBulk} />\n                        </span>\n                        {randomPerson.email}\n                    </div>\n                </div>\n            }\n            {!randomPerson && !loading && <Redirect to={'/'} />}\n        </>\n    )\n};\n\nexport default Person;\n","import React, { Suspense } from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport Persons from \"./components/Persons\";\nimport Person from \"./components/Person\";\nimport {setLoading, setLoadMoreUsers, setRandomUsers} from \"./redux/SystemReducer\";\nimport {useDispatch} from \"react-redux\";\nimport {useSelector} from \"./redux/Store\";\n\nfunction App() {\n    const dispatch =                        useDispatch();\n    const loadMoreUsers =                   useSelector((state) => state.system.loadMoreUsers);\n    const fetchRandomUsers = React.useCallback(() => {\n        fetch('https://randomuser.me/api/?results=10')\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw response;\n            })\n            .then((data) => {\n                dispatch(setRandomUsers(data.results));\n            })\n            .catch((error) => {\n                console.error('Error fetching data', error);\n            })\n            .finally(() => {\n                dispatch(setLoading(false));\n                dispatch(setLoadMoreUsers(false));\n            });\n    }, [dispatch]);\n    React.useEffect(() => {\n        fetchRandomUsers();\n    }, [fetchRandomUsers]);\n    React.useEffect(() => {\n        if (loadMoreUsers) {\n            setTimeout(() => {\n                fetchRandomUsers();\n            }, 1000);\n        }\n    }, [fetchRandomUsers, loadMoreUsers]);\n  return (\n      <BrowserRouter>\n        <Suspense fallback={<></>}>\n          <Switch>\n            <Route exact path=\"/\" component={Persons} />\n            <Route path=\"/:id\" component={Person} />\n              <Route render={() => <Redirect to={{pathname: \"/\"}} />} />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}